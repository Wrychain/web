// <auto-generated />
using System;
using Caspnetti.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Caspnetti.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250724085422_added_messenger_and_chain_entities")]
    partial class added_messenger_and_chain_entities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Caspnetti.DAL.Entity.Chain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Chains");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.FilePointer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FileType")
                        .HasColumnType("int");

                    b.Property<string>("GeneratedFilename")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OriginalFilename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GeneratedFilename")
                        .IsUnique();

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("FilePointers");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Mesh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChainId")
                        .HasColumnType("int");

                    b.Property<int?>("ChainId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChainId");

                    b.HasIndex("ChainId1");

                    b.ToTable("Meshes");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThreadId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ThreadId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.MessageAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FilePointerId")
                        .HasColumnType("int");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("FilePointerId");

                    b.HasIndex("MessageId");

                    b.ToTable("MessageAttachments");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.MessageReaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FromId")
                        .HasColumnType("int");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("Reaction")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("MessageId");

                    b.ToTable("MessageReactions");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.MessageReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ById");

                    b.HasIndex("MessageId");

                    b.ToTable("MessageReceipts");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReadAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Thread", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChainId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("ThreadType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChainId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Threads");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.ThreadOrdering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int?>("MeshId")
                        .HasColumnType("int");

                    b.Property<int?>("ThreadId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MeshId");

                    b.HasIndex("ThreadId");

                    b.ToTable("ThreadOrderings");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.ThreadPresence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ThreadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ThreadId");

                    b.HasIndex("UserId");

                    b.ToTable("ThreadPresences");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.ThreadProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("LastReadMessageId")
                        .HasColumnType("int");

                    b.Property<int?>("ThreadId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LastReadMessageId");

                    b.HasIndex("ThreadId");

                    b.HasIndex("UserId");

                    b.ToTable("ThreadProgresses");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChainId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("ThreadId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChainId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("ThreadId");

                    b.HasIndex("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.UserSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TokenHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Chain", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Mesh", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.Chain", null)
                        .WithMany("DefaultMeshes")
                        .HasForeignKey("ChainId");

                    b.HasOne("Caspnetti.DAL.Entity.Chain", null)
                        .WithMany("UserMeshes")
                        .HasForeignKey("ChainId1");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Message", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("Caspnetti.DAL.Entity.Thread", null)
                        .WithMany("Messages")
                        .HasForeignKey("ThreadId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.MessageAttachment", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("Caspnetti.DAL.Entity.FilePointer", "FilePointer")
                        .WithMany()
                        .HasForeignKey("FilePointerId");

                    b.HasOne("Caspnetti.DAL.Entity.Message", null)
                        .WithMany("Attachments")
                        .HasForeignKey("MessageId");

                    b.Navigation("Author");

                    b.Navigation("FilePointer");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.MessageReaction", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.User", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("Caspnetti.DAL.Entity.Message", null)
                        .WithMany("Reactions")
                        .HasForeignKey("MessageId");

                    b.Navigation("From");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.MessageReceipt", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.User", "By")
                        .WithMany()
                        .HasForeignKey("ById");

                    b.HasOne("Caspnetti.DAL.Entity.Message", null)
                        .WithMany("Receipts")
                        .HasForeignKey("MessageId");

                    b.Navigation("By");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Notification", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.User", null)
                        .WithMany("Notifications")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Thread", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.Chain", null)
                        .WithMany("GlobalThreads")
                        .HasForeignKey("ChainId");

                    b.HasOne("Caspnetti.DAL.Entity.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.ThreadOrdering", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.Mesh", null)
                        .WithMany("ThreadOrderings")
                        .HasForeignKey("MeshId");

                    b.HasOne("Caspnetti.DAL.Entity.Thread", "Thread")
                        .WithMany()
                        .HasForeignKey("ThreadId");

                    b.Navigation("Thread");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.ThreadPresence", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.Thread", null)
                        .WithMany("ThreadPresences")
                        .HasForeignKey("ThreadId");

                    b.HasOne("Caspnetti.DAL.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.ThreadProgress", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.Message", "LastReadMessage")
                        .WithMany()
                        .HasForeignKey("LastReadMessageId");

                    b.HasOne("Caspnetti.DAL.Entity.Thread", null)
                        .WithMany("ThreadProgresses")
                        .HasForeignKey("ThreadId");

                    b.HasOne("Caspnetti.DAL.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("LastReadMessage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.User", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.Chain", null)
                        .WithMany("Users")
                        .HasForeignKey("ChainId");

                    b.HasOne("Caspnetti.DAL.Entity.Thread", null)
                        .WithMany("Users")
                        .HasForeignKey("ThreadId");

                    b.HasOne("Caspnetti.DAL.Entity.User", null)
                        .WithMany("Friends")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.UserSession", b =>
                {
                    b.HasOne("Caspnetti.DAL.Entity.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Chain", b =>
                {
                    b.Navigation("DefaultMeshes");

                    b.Navigation("GlobalThreads");

                    b.Navigation("UserMeshes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Mesh", b =>
                {
                    b.Navigation("ThreadOrderings");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Message", b =>
                {
                    b.Navigation("Attachments");

                    b.Navigation("Reactions");

                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.Thread", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("ThreadPresences");

                    b.Navigation("ThreadProgresses");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Caspnetti.DAL.Entity.User", b =>
                {
                    b.Navigation("Friends");

                    b.Navigation("Notifications");

                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
